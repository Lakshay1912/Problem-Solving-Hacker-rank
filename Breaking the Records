import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    public static List<Integer> breakingRecords(List<Integer> scores) {
    List highest = new ArrayList();
    List lowest = new ArrayList();
    List result = new ArrayList();
    int count = 0;
    int count1 = 0;
    int n = scores.size(); 
    highest.add(scores.get(0));
    lowest.add(scores.get(0));
    for(int i =1;i<n;i++){
        if((scores.get(i))>(int)(highest.get(i-1))){
            highest.add(scores.get(i));
        }
        else{
            highest.add(highest.get(i-1));
        } 
    }
    for(int i =1;i<n;i++){
        if((scores.get(i))<(int)(lowest.get(i-1))){
            lowest.add(scores.get(i));
        }
        else{
            lowest.add(lowest.get(i-1));
        }
    }
    for(int i = 1;i<n;i++){
        if(scores.get(i) == (int)highest.get(i)){
            if(highest.get(i) != highest.get(i-1)){
            count = count+1;
            }
        }
        if(scores.get(i) == (int)lowest.get(i)){
            if(lowest.get(i) != lowest.get(i-1)){
            count1 = count1 + 1;
        }
        }
    }
    result.add(count);
    result.add(count1);
return result;
    }
}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] scoresTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> scores = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int scoresItem = Integer.parseInt(scoresTemp[i]);
            scores.add(scoresItem);
        }

        List<Integer> result = Result.breakingRecords(scores);

        for (int i = 0; i < result.size(); i++) {
            bufferedWriter.write(String.valueOf(result.get(i)));

            if (i != result.size() - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
